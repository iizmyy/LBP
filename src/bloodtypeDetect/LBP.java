/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewJFrame.java
 *
 * Created on Jun 6, 2013, 8:18:32 PM
 */
package bloodtypeDetect;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;

/**
 *
 * @author izmy
 */
public class LBP extends javax.swing.JFrame {
    BufferedImage avg_grayAdj;
    int pikselGS [][];
    /** Creates new form NewJFrame */
    public LBP() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        btn_open = new javax.swing.JButton();
        image = new javax.swing.JLabel();
        lbl_greyscale = new javax.swing.JLabel();
        lbl_rhesus = new javax.swing.JLabel();
        btn_LBP = new javax.swing.JButton();
        lbl_LBP = new javax.swing.JLabel();

        fileChooser.setDialogTitle("Cari Gambar");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Local Binary Patterns");

        btn_open.setText("Grayscale");
        btn_open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_openActionPerformed(evt);
            }
        });

        lbl_rhesus.setFont(new java.awt.Font("Ding-DongDaddyO", 1, 18)); // NOI18N

        btn_LBP.setLabel("LBP");
        btn_LBP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_LBPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(312, 312, 312)
                        .addComponent(lbl_rhesus, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(image, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_open)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbl_greyscale, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(btn_LBP)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbl_LBP, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(btn_open))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lbl_greyscale, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(image, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                            .addComponent(lbl_LBP, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(btn_LBP)))
                .addGap(195, 195, 195)
                .addComponent(lbl_rhesus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void btn_openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_openActionPerformed
// TODO add your handling code here:
    BufferedImage gambar = null;
    int red, green, blue;
    int newPixel;
    int returnVal = fileChooser.showOpenDialog(this);
    if(returnVal == JFileChooser.APPROVE_OPTION){
        File file = fileChooser.getSelectedFile();
        System.out.println(file);
            try {
                gambar = ImageIO.read(file);
                ImageIcon icon = new ImageIcon(gambar);
                image.setIcon(icon);
            } catch (IOException ex) {
                Logger.getLogger(LBP.class.getName()).log(Level.SEVERE, null, ex);
            }
        
    }
    BufferedImage avg_gray = new BufferedImage(gambar.getWidth(), gambar.getHeight(), gambar.getType());
    
    pikselGS = new int[gambar.getWidth()][gambar.getHeight()];
    for(int i=0; i<gambar.getWidth(); i++) {
        for(int j=0; j<gambar.getHeight(); j++) {
            int rgb = gambar.getRGB(i, j);
            
            //merubah warna ke RGB
            red = rgb & 0x000000FF;
            green = (rgb & 0x0000FF00) >> 8;
            blue =  (rgb & 0x00FF0000) >> 16;
            
            int avg = (red + green + blue)/3;
            
            newPixel = avg+(avg<<8)+(avg<<16);
            avg_gray.setRGB(i, j, newPixel);
            pikselGS[i][j] = avg;
        }
    }
                ImageIcon icon1 = new ImageIcon(avg_gray);
                lbl_greyscale.setIcon(icon1);
                avg_grayAdj=avg_gray;
}//GEN-LAST:event_btn_openActionPerformed

    private void btn_LBPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_LBPActionPerformed
        // TODO add your handling code here:
        //ambil gambar
        int kolom = avg_grayAdj.getHeight();
        int baris = avg_grayAdj.getWidth();      
        int pikselLBP[][] = new int[baris][kolom];
        int g[] = new int[9];
        int LBP;
        BufferedImage image_adj = new BufferedImage(avg_grayAdj.getWidth(), avg_grayAdj.getHeight(), avg_grayAdj.getType());
        
        //hitung lbp
        System.out.println("=============LBP===============");      
        for (int i = 0; i < baris; i++) {
            for (int j = 0; j < kolom; j++) {
                //System.out.print(pikselGS[i][j]+" ");
                //clr = avg_grayAdj.getRGB(i, i);
                //System.out.println(clr+",");
                if (i==0 || j==0){
                    pikselLBP[i][j] = pikselGS[i][j];
                    System.out.print(pikselLBP[i][j]+" ");}
                else if (i==(baris-1) || j==(kolom-1)){
                    pikselLBP[i][j] = pikselGS[i][j];
                    System.out.print(pikselLBP[i][j]+" ");}
                else{
                    g[8] = pikselGS[i][j];
                    g[0] = pikselGS[i-1][j-1];
                    g[1] = pikselGS[i-1][j];
                    g[2] = pikselGS[i-1][j+1];
                    g[3] = pikselGS[i][j+1];
                    g[4] = pikselGS[i+1][j+1];
                    g[5] = pikselGS[i+1][j];
                    g[6] = pikselGS[i+1][j-1];
                    g[7] = pikselGS[i][j-1];
                    LBP = 0;
                    for (int k = 0; k < 8; k++) {
                        if(g[k]>=g[8]){
                            g[k]=(int) (1*Math.pow(2.0, k));
                            LBP = LBP + g[k]; 
                        }
                        else{
                            LBP = LBP + 0;
                        }
                    }
                    pikselLBP[i][j] = LBP;
                    System.out.print(pikselLBP[i][j]+" ");
                }
                //System.out.print(pikselLBP[i][j]+" ");
                int newPixel = pikselLBP[i][j]+(pikselLBP[i][j]<<8)+(pikselLBP[i][j]<<16);
                image_adj.setRGB(i, j, newPixel);
            }
            System.out.println("");
        }
               
        //set gambar baru
        ImageIcon icon1 = new ImageIcon(image_adj);
        lbl_LBP.setIcon(icon1);        
    }//GEN-LAST:event_btn_LBPActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LBP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LBP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LBP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LBP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new LBP().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_LBP;
    private javax.swing.JButton btn_open;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JLabel image;
    private javax.swing.JLabel lbl_LBP;
    private javax.swing.JLabel lbl_greyscale;
    private javax.swing.JLabel lbl_rhesus;
    // End of variables declaration//GEN-END:variables
}
